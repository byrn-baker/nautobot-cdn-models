---
- name: akamai Content Provider list
  uri: 
    url: "{{ akamai_prod_url}}/content-delivery/v1/content-providers//?view=detail&pageNumber=1&pageSize=1000"
    method: GET
    return_content: yes
    status_code: "200"
    validate_certs: false
    headers:
      Accept: "application/json"
      Authorization: "{{ akamai_prod_token }}"
      validate_certs: false
  register: content_provider_list

- name: Load Nautobot with the Content Providers
  networktocode.nautobot.plugin:
    url: "{{ nb_dev_url }}"
    token: "{{ nb_dev_token }}"
    plugin: akamai-config-manager
    endpoint: cdncontentprovider
    validate_certs: false
    identifiers:
      name: "{{item.name}}"
      contentProviderId: "{{item.contentProviderId}}"
  loop: "{{ content_provider_list.json.contentProviders }}"

- name: Akamai Origin List
  uri: 
    url: "{{ akamai_prod_url}}//content-delivery/v1/content-providers/{{item.contentProviderId}}/origins?pageNumber=1&pageSize=1000"
    method: GET
    return_content: yes
    status_code: "200"
    validate_certs: false
    headers:
      Accept: "application/json"
      Authorization: "{{ akamai_prod_token }}"
      validate_certs: false
  register: origin_list
  loop: "{{ content_provider_list.json.contentProviders }}"

- name: template the origin list
  template:
    src: origin_list.j2
    dest: ./tmp/akamai/origin_list.yml

- include_vars: ./tmp/akamai/origin_list.yml
- name: Akamai Origin List
  uri: 
    url: "{{ akamai_prod_url }}/content-delivery/v1/content-providers/{{ item.contendproviderId }}/origins/{{ item.originId }}"
    method: GET
    return_content: yes
    status_code: "200"
    validate_certs: false
    headers:
      Accept: "application/json"
      Authorization: "{{ akamai_prod_token }}"
      validate_certs: false
  register: origin_detail_list
  loop: "{{ origins }}"

- name: template the origin details list
  template:
    src: origin_details_list.j2
    dest: ./tmp/akamai/origin_details_list.json


- include_vars: ./tmp/akamai/origin_details_list.json
- name: Load Nautobot with the Origins
  networktocode.nautobot.plugin:
    url: "{{ nb_dev_url }}"
    token: "{{ nb_dev_token }}"
    plugin: akamai-config-manager
    endpoint: cdnorigin
    validate_certs: false
    identifiers:
      name: "{{ item.hostname }}"
      slug: "{{ item.hostname | replace('.', '-')}}"
      originTimeout: "{{ item.originTimeout | default()}}"
      enable: "{{ item.enable }}"
      tlsIngestProfileId: "{{ item.tlsIngestProfileId | default(1) }}"
      storagePartitionId: "{{ item.storagePartitionId | default(1) }}" 
      enableRequestIdExport: "{{ item.enableRequestIdExport }}"
      cachingType: "{{ item.cachingType }}"
      enableAuthenticatedContent: "{{ item.enableAuthenticatedContent }}"
      enableSiteRedirects: "{{ item.enableSiteRedirects }}"
      cacheKeyOriginHostnameOriginId: "{{ item.cacheKeyOriginHostnameOriginId | default(1) }}"
      edgeHostType: "{{ item.edgeHostType }}"
      edgeHostname: "{{ item.edgeHostname | default() }}"
      interSiteProtocol: "{{ item.interSiteProtocol }}"
      intraSiteProtocol: "{{ item.intraSiteProtocol }}"
      errorCacheMaxAge: "{{ item.errorCacheMaxAge | default(1)}}"
      errorCacheMaxRetry: "{{ item.errorCacheMaxRetry | default(1)}}"
      dynamicHierarchy: "{{ item.dynamicHierarchy | to_nice_json }}"
      fastReroute: "{{ item.fastReroute | to_nice_json }}"
      resolvableHostnames: "{{ item.resolvableHostnames | default('') }}"
      cacheableErrorResponseCodes: "{{ item.cacheableErrorResponseCodes | to_nice_json | default() }}"
      ipAddressTypes: "{{ item.ipAddressTypes| to_nice_json | default() }}"
      originId: "{{ item.originId }}"
      contentprovider: aed1d64e-52a6-432d-a6ff-b15121e6dac7
  loop: "{{ origin_details }}"
